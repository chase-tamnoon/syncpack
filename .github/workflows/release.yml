name: Release rust/main

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  publish-npm-binaries:
    name: Publish npm binaries
    runs-on: ${{ matrix.build.OS }}
    strategy:
      fail-fast: true
      matrix:
        build:
          - {
              NAME: linux-x64-glibc,
              OS: ubuntu-22.04,
              TARGET: x86_64-unknown-linux-gnu,
            }
          # - {
          #     NAME: linux-arm64-glibc,
          #     OS: ubuntu-22.04,
          #     TARGET: aarch64-unknown-linux-gnu,
          #   }
          # - {
          #     NAME: win32-x64-msvc,
          #     OS: windows-2022,
          #     TARGET: x86_64-pc-windows-msvc,
          #   }
          # - {
          #     NAME: win32-arm64-msvc,
          #     OS: windows-2022,
          #     TARGET: aarch64-pc-windows-msvc,
          #   }
          # - {
          #     NAME: darwin-x64,
          #     OS: macos-13,
          #     TARGET: x86_64-apple-darwin,
          #   }
          # - {
          #     NAME: darwin-arm64,
          #     OS: macos-13,
          #     TARGET: aarch64-apple-darwin,
          #   }

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.build.TARGET }}
          override: true
          components: rustfmt, clippy
      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2
      - name: Install just
        uses: extractions/setup-just@v1
        with:
          just-version: 1.35.0
      - name: Build rust binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.build.TARGET }}
          use-cross: ${{ !env.ACT && matrix.build.OS == 'ubuntu-22.04' }}
      - name: Publish rust binary package to npm
        shell: bash
        run: |
          just --dotenv-filename .env.${{ matrix.build.NAME }} create-npm-binary-package
          just --dotenv-filename .env.${{ matrix.build.NAME }} publish-npm-binary-package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: syncpack-${{ matrix.build.TARGET }}
          path: target/${{ matrix.build.TARGET }}/release/syncpack

  publish-npm-base:
    name: Publish npm package
    needs: publish-npm-binaries
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
      - name: Install just
        uses: extractions/setup-just@v1
        with:
          just-version: 1.35.0
      - name: Publish the package
        shell: bash
        run: |
          just --dotenv-filename .env.linux-x64-glibc create-npm-root-package
          just --dotenv-filename .env.linux-x64-glibc publish-npm-root-package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
